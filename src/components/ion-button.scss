@use '../utils/api';

/**
 * Note: ion-back-button should not put inner ion-button.
 * feat(): ion-config new property for disable ion-back-button Animation
 */

@mixin theme-buttons {
  @include api.glass-background;
  border-radius: 25px;
  overflow: hidden;

  /**
   * compare .header-collapse-main ion-toolbar.in-toolbar ion-title, .header-collapse-main ion-toolbar.in-toolbar ion-buttons
   */
  transition: transform 140ms ease-out !important;

  &:has(.ion-activated) {
    transform: scale(1.28);
  }

  ion-button:not(.ios26-disabled) {
    transform: none;

    &.button-clear {
      color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.9);
      &.ion-color {
        color: rgba(var(--ion-color-base-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 1);
      }
      &.ion-activated {
        color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1) !important;
        &.ion-color {
          color: rgba(var(--ion-color-base-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.1) !important;
        }
      }
    }

    &:not(.button-disabled) {
      opacity: 1;
    }

    &.ion-activated {
      --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);
      &.ion-color {
        --color: rgba(var(--ion-color-base-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.1);
      }
    }

    &::part(native) {
      /**
       * overwrite theme-button mixin.
       * ex) ion-button.ios:not(.ios26-disabled):not(.button-solid):not(.ios26-button-solid):not(.button-outline):not(.ios26-button-outline):not(.button-clear):not(.ios26-button-clear)::part(native)
       */
      box-shadow: none !important;
      border: none !important;
      background: transparent !important;
      backdrop-filter: none !important;
    }
  }

  ion-button:not(.ios26-disabled) {
    margin: 0;
    :first-child {
      margin-left: -8px;
    }
    :last-child {
      margin-right: -8px;
    }
    :only-child {
      margin: 0;
    }
  }
  ion-menu-button:not(.ios26-disabled) {
    width: 44px;
    height: 44px;
    padding: 2px;
  }
}

@mixin theme-button() {
  max-height: inherit;

  transition:
    transform 140ms ease-out,
    color 50ms ease;
  will-change: transform;

  // button size default
  &:not(.button-small):not(.button-large) {
    font-size: 1.05rem;
    &:not(.button-has-icon-only):not(.back-button-has-icon-only)::part(native) {
      padding: 0 16px;
      min-height: 44px;
    }
  }

  &:not(.button-round) {
    --border-radius: 24px;
    &.button-large {
      --border-radius: 30px;
    }
  }

  &:not(.button-clear):not(.ios26-button-clear) {
    &.ion-activated {
      transform: scale(0.95);
      &.button-small {
        transform: scale(0.94);
      }
      &.button-large {
        transform: scale(0.96);
      }
    }
  }

  // fill:default only
  &:not(.button-solid):not(.button-outline):not(.button-clear) {
    --background-hover: transparent;
    --background-activated: transparent;
    &::part(native) {
      @include api.glass-background;
    }

    &:not(.button-disabled) {
      opacity: 1; // for ion-back-button
    }

    --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.9);
    &.ion-color {
      --color: rgba(var(--ion-color-base-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 1);
    }
    &.ion-activated {
      --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);
      &.ion-color {
        --color: rgba(var(--ion-color-base-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.1);
      }
      transform: scale(1.28);
      &.button-large {
        transform: scale(1.18);
      }
      &::part(native) {
        opacity: 1; // for ion-back-button
      }
    }
  }

  &.button-has-icon-only,
  &.back-button-has-icon-only {
    &:not(.button-small):not(.button-large)::part(native) {
      width: 44px;
      height: 44px;
      padding: 2px;
    }

    ion-icon {
      font-size: 1.4rem;
      &[name='close-outline'] {
        font-size: 2rem;
      }
    }
  }
}

ion-buttons.ios:not(.ios26-disabled):not(
    :has(ion-back-button, ion-button.button-default, ion-button.button-solid, ion-button.button-outline)
  ) {
  @include theme-buttons;
}
ion-button.ios:not(.ios26-disabled) {
  @include theme-button;
}
ion-back-button.ios:not(.ios26-disabled) {
  @include theme-button;
}

ion-back-button.ion-cloned-element {
  visibility: hidden;
}
